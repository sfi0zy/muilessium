// @name        Select dropdown
// @description Data-id attribute should be used to select id and name attributes for the hidden html select element. Should be used with label for better accessibility.
// @description_ru Атрибут data-id может быть использован, чтобы задать id скрытому настоящему селекту.
//
// @component   SelectDropdown
// @method      getSelectedIndex()        - returns index of the selected item - возвращает индекс выбранного пункта
// @method      openDropdown()            - opens dropdown menu - открывает выпадающее меню
// @method      closeDropdown()           - closes dropdown menu - закрывает выпадающее меню
// @method      toggleDropdown()          - opens dropdown menu if it is closed and closes it otherwise - открывает меню, если оно закрыто, и закрывает, если открыто
// @method      updateState(newIndex = 0) - selects item with selected index - выбирает пункт с заданным индексом
// @method      getState()                - returns index of the selected item - возвращает индекс выбранного пункта
//
// @event       update-state
//
// @requires     input
// @requires     dropdown-options
// @requires     shadow-toggle
// @requires     svg-icon
//
// @markup
//.mui-input-wrapper
//    label.mui-input-label Select color
//    .mui-select-dropdown#docs-only-id--select-dropdown
//        .select
//            .state
//            .mui-dropdown-options._shadow-1
//                .wrapper
//                    .option.-selected(data-value='red') Red
//                    .option(data-value='green') Green
//                    .option(data-value='blue') Blue
//                    .option(data-value='orange') Orange
//        .mui-shadow-toggle
//        .icon
//            svg.mui-svg-icon
//                use(xlink:href='#mui-svg-icon--arrow-down')


.@{muilessium-prefix}select-dropdown {
    position: relative;    
    height: @defaults[ui-height];
    width: 100%;
    user-select: none;
    
    > .select {
        height: @defaults[ui-height];
        width: 100%;
        padding: 0 1rem;
        margin: 0;
        font-size: 1rem;
        line-height: @defaults[ui-height];
        color: @select-dropdown[color];
        appearance: none;
        border: 1px solid @select-dropdown[border-color];
        border-radius: @defaults[border-radius];
        outline: none;
        transition: border-color @defaults[animation-duration] @defaults[animation-function];

        &:hover,
        &:focus {
            cursor: pointer;
            border-color: @select-dropdown[border-color-focused];
        }
    }
    
    > .icon {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        height: @defaults[ui-height];
        width: @defaults[ui-height];
        line-height: @defaults[ui-height];
        text-align: center;
        color: @select-dropdown[color];
        border-top-right-radius: @defaults[border-radius];
        border-bottom-right-radius: @defaults[border-radius];
        pointer-events: none;
    }

    > .icon > .@{muilessium-prefix}svg-icon {
        fill: @select-dropdown[color];
    }

    .@{muilessium-prefix}dropdown-options {
        opacity: 0;
        pointer-events: none;
        position: absolute;
        bottom: -.72rem;
        left: 0;
        width: 100%;
        transform: translateY(80%);
        transition: all @defaults[animation-duration] @defaults[animation-function];
    }

    &.-opened {
        .@{muilessium-prefix}dropdown-options {
            opacity: 1;
            pointer-events: auto;
            transform: translateY(100%);
            z-index: 11;
        }
    }
}

