// @name        ButtonDropdown
// @description ...
// @description_ru ...
//
// @component   ButtonDropdown
// @method      openDropdown()   - opens dropdown menu - открывает выпадающее меню
// @method      closeDropdown()  - closes dropdown menu - закрывает выпадающее меню
// @method      toggleDropdown() - opens dropdown menu if it is closed and closes it otherwise - открывает меню, если оно закрыто, и закрывает, если оно открыто
//
// @requires    button
// @requires    dropdown-options
// @requires    shadow-toggle
// @requires    svg-icon
//
// @markup
//.mui-button-dropdown#docs-only-id--button-dropdown
//   a.mui-button
//       span dropdown button
//       span &nbsp;
//       svg.mui-svg-icon
//           use(xlink:href='#mui-svg-icon--arrow-down')
//   .mui-dropdown-options
//       .wrapper
//           .option Option 1
//           .option Option 2
//           .option Option 3
//           .option Option 4
//           .option Option 5
//   .mui-shadow-toggle


.@{muilessium-prefix}button-dropdown {
    display: inline-block;
    position: relative;

    > .@{muilessium-prefix}button {
        position: relative;
    }

    > .@{muilessium-prefix}dropdown-options {
        opacity: 0;
        pointer-events: none;
        position: absolute;
        left: 0;
        bottom: -.72rem;
        transform: translateY(80%);
        width: 100%;
        transition: all @defaults[animation-duration] @defaults[animation-function];
    }

    &.-opened {
        > .@{muilessium-prefix}button {
            z-index: 11;
        }

        > .@{muilessium-prefix}dropdown-options {
            opacity: 1;
            pointer-events: auto;
            transform: translateY(100%);
        }
    }
}

