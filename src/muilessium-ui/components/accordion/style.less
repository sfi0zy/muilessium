// @name        Accordion
// @description ...
// @description_ru ...
//
// @component   Accordion
// @method      foldItem(index)   - folds item with selected index - сворачивает элемент с заданным индексом
// @method      foldAllItems()    - folds all items - сворачивает все элементы
// @method      unfoldItem(index) - unfolds item with selected index - разворачивает элемент с заданным индексом
// @method      unfoldAllItems()  - unfolds all items - разворачивает все элементы
// @method      toggleItem(index) - unfolds item with selected index if it is folded and folds it otherwise - разворачивает элемент, если он свернут, с сворачивает, если он развернут
//
// @requires    svg-icon
//
// @markup
//ul.mui-accordion#docs-only-id--accordion
//    li.item
//        .title
//            .indicator
//                svg.mui-svg-icon
//                    use(xlink:href='#mui-svg-icon--arrow-right')
//            span &nbsp;Lorem
//        .content Lorem ipsum dolor sit amet, consectetur adipisicing elit. Porro, quaerat!
//    li.item
//        .title
//            .indicator
//                svg.mui-svg-icon
//                    use(xlink:href='#mui-svg-icon--arrow-right')
//            span &nbsp;Lorem
//        .content Lorem ipsum dolor sit amet, consectetur adipisicing elit. Porro, quaerat!


.@{muilessium-prefix}accordion {
    list-style: none;
    background: @accordion[background];
    color: @accordion[color];

    > .item {
        display: block;
        position: relative;
        margin: 0;
        padding: 0 1rem;
        border: 1px solid @accordion[border-color];
        overflow: hidden;

        &:first-of-type {
            border-top-left-radius: @defaults[border-radius];
            border-top-right-radius: @defaults[border-radius];
        }

        &:not(:first-of-type) {
            border-top: none;
        }

        &:last-of-type {
            border-bottom-left-radius: @defaults[border-radius];
            border-bottom-right-radius: @defaults[border-radius];
        }
    }

    > .item > .title {
        display: block;
        position: relative;
        left: -1rem;
        width: ~'calc(100% + 2rem)';
        padding: 1rem;
        line-height: 1;
        background: @accordion[title-background];
        color: @accordion[title-color];
        transition: border-bottom-left-radius  @defaults[animation-duration] @defaults[animation-function],
            border-bottom-right-radius @defaults[animation-duration] @defaults[animation-function];

        &:hover,
        &:focus {
            cursor: pointer;
            background: @accordion[title-background-focused];
        }
    }

    > .item:first-of-type > .title {
        border-top-left-radius: @defaults[border-radius];
        border-top-right-radius: @defaults[border-radius];
    }

    > .item:last-of-type:not(.-opened) > .title {
        border-bottom-left-radius: @defaults[border-radius];
        border-bottom-right-radius: @defaults[border-radius];
    }

    > .item > .title > .indicator {
        display: inline-block;
        height: 1em;
        width: 1em;
        transition: transform @defaults[animation-duration] @defaults[animation-function];
        user-select: none;
    }

    > .item > .title > .indicator > svg {
        fill: @accordion[title-color];
    }

    > .item > .content {
        max-height: 0;
        overflow: hidden;
        opacity: 0;
        transform: rotateX(90deg);
        transition: all @defaults[animation-duration] @defaults[animation-function];
        will-change: max-height, margin, opacity, transform;

        @media print {
            max-height: none;
            margin: 1rem 0;
            opacity: 1;
            transform: rotateX(0);
        }
    }

    > .item.-unfold {
        > .content {
            max-height: 30rem;
            margin: 1rem 0;
            opacity: 1;
            transform: rotateX(0);
            transition: all @defaults[animation-duration] @defaults[animation-function];
        }

        > .title {
            border-bottom-left-radius: @defaults[border-radius];
            border-bottom-right-radius: @defaults[border-radius];
        }

        > .title > .indicator {
            transform: rotate(90deg);
        }
    }
}

